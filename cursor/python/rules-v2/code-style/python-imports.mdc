---
description: Правила организации, сортировки и проверки импортов в Python коде
globs: "*.py,*.pyi"
alwaysApply: true
related: ["code-style/python-code-style-core.mdc", "code-style/python-linting-tools.mdc"]
priority: 8
---
# Правила организации импортов в Python

Правила и рекомендации по организации, сортировке и проверке импортов в Python коде.

---

## Порядок импортов

Импорты должны быть организованы в следующем порядке:

1. Стандартная библиотека Python
2. Сторонние библиотеки
3. Локальные модули проекта

Внутри каждой группы импорты должны быть отсортированы в алфавитном порядке:

```python
# Стандартная библиотека
import os
import sys
from datetime import datetime

# Сторонние библиотеки
import numpy as np
import pandas as pd
from django.db import models

# Локальные модули
from myproject.core import utils
from myproject.models import User
```

## Проверка неиспользуемых импортов

Необходимо регулярно проверять и удалять неиспользуемые импорты:

- Все импортированные модули и объекты должны использоваться в коде
- Неиспользуемые импорты должны быть удалены
- Для автоматической проверки неиспользуемых импортов использовать flake8 (код ошибки F401)
- Запрещено оставлять закомментированные неиспользуемые импорты

## Исключения для __init__.py

В файлах `__init__.py` допускается импортировать модули и объекты без их непосредственного использования в самом файле, если эти импорты нужны для удобства использования пакета. В этом случае необходимо настроить flake8 для игнорирования ошибки F401 в этих файлах:

```toml
[tool.flake8]
per-file-ignores = "__init__.py:F401"
```

## Абсолютные и относительные импорты

- Предпочтительно использовать абсолютные импорты
- Относительные импорты допустимы только внутри пакета для импорта соседних модулей
- Не использовать конструкцию `from module import *`

## Инструменты для работы с импортами

- **isort**: Для автоматической сортировки импортов
- **flake8**: Для обнаружения неиспользуемых импортов (F401)

Пример настройки в `pyproject.toml`:

```toml
[tool.isort]
profile = "black"
line_length = 88
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
per-file-ignores = "__init__.py:F401"
```

## Интеграция с другими правилами

- **Стиль кода**: Импорты должны соответствовать общим правилам стиля кода, описанным в @python-code-style-core.mdc
- **Инструменты**: Для автоматизации работы с импортами используйте инструменты, описанные в @python-linting-tools.mdc 